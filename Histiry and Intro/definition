LEVEL1
React is used to develop single page app ,free and open-source frontend-js-library for building ui based on component by FaceBook inc

key advantage-- only rerender that part is changed

to use react in js file using CDN

step go to react cdn website
<!-- <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
<script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script> -->

we added in html

now we created h1 using react but react is use to create frontend but to show on browser wh have 2 thing REACTdom REACTnative

REACTdom --dlaal ke trah workkrta hai parent root ko create krta hai jiske ander hum react wale h1 ko append krenge ||  react ka elememt jo bnaya hai usko reactdom browser me print krta hai parent(root) element bnake


REACTnative used for mobile app


LEVEL2
main utility to create app

1. create-react-app
2. Vite

to make prerequirement Node.js 
NodeJs :- basically js ke liye runtime enviroment provide krta hai 
phle js ko only browser prr hi use kr skte the but nodejs ke help se ki bhi enviroment like vscode use krte hai

step nodejs.org -> download ->LTS version download
check node -v in cmd else add path to env


 how utility 1. create-react-app works
 --------------------------------------




 run this cmd :

 npx create-react-app appName //node package executer-npx 
                            //node package manage -npm  on website bhut saare nodeJs ke packages hai . code library ko apne app me laane ke liye install krna pdega

to run :-  npm start

after few minute 
one folder will be created that contain 

readme.md :-serves as a crucial documentation tool, providing info about the project's purpose, usage, and how to run i

package.json :-tell us about foldername script  version dependencies basically details
we use mainly 2 dependencies in this- react and reactdom
scripts: start- can be run through 'npm run start' or 'npm start' it will open default browser on localhost

public:- contains index.html where inside body div with root id is there and other icon logo

src: - index.js here with the help of ReactDOM we are rendering  div(id=root as parent iske andar poora app hai react ka jaise upar h1 ko bheja tha App component ko browser pe dikane me help krta hai)



App.jsx is component inside App func is created that return single div or fragment or page called Function based component
but if html is returned it is written in jsx file (javascript XML)
Syntex: 
        function App(){
                return (

                )
        }

        export default App;

jo aage jake index.js me import and render hoga 

imp** we will create diffrent component in component folder and import inside App.jsx component in on place
App.css for App.js
index.css for index.js



npx createApp has added some faltoo ki dependency but vite aisa nhi krta hai




2. Vite 
-------------------------

cmd : npm create vite@latest 
it will install only 2 dependencies it will not auto i npm node_module  
by default script: 
                has "dev" instead of "start"
                to run :- npm run  dev

src-> assets:
            contains img that will be used in Projects

instead of index.jsx here it is main.jsx 

we can use js between html tag with help of bracket { }

we can nav with h1 ul ol li with css list-style none to remove "bullet point" 

LEVEL 03
------------------

Props in React

props-- properties
props are arg passed in react component
react props is accessed like function arg in js(props.name) and passed like att in html(name="Prince")

we have made 1 component Box, and renderd in App component 2 time and we wnat to change data for 2nd rendred Box we use props

Sare functional component ek args lete hai named props by default it can take

we can console props we will se props return { } objects in starting empty we can pass values from where component(where we will wnt to change data) is rendered.

we will pass attribute with value where component is rendered and can be accessed in functional-component by arg props and can be used inside return using {props.attr} 

if we forgot to pass attr from component called like "<"Box" />" we can define default value of attr in props pace using {name="Prince"} and access & use in html inside  {name}

for other component if attr passed it will be reflected over default attr


